
class PongGame {
    static PongGame instance;
    field Bat bat;
    field Ball ball;
    field Brick brick;
    field int wall,score,lastWall,batWidth;
    field int time;
    field int brickscore;
    field boolean brick1, brick2, brick3, brick4;

    // True when the game is over
    field boolean exit;


    
    constructor PongGame new() {
	    do Screen.clearScreen();

	    let batWidth = 50;
        let bat = Bat.new(230, 229, batWidth, 7);

        let ball = Ball.new(253, 222, 0, 511, 0, 229);
	    do ball.setDestination(400,0);

	    do Screen.drawRectangle(0, 238, 511, 240);
	    do Output.moveCursor(22,0);
	    do Output.printString("Bounce Score: 0");

        do Output.moveCursor(22,20);
        do Output.printString("Brick Score: 0");
	
	    let exit = false;
	    let score = 0;
	    let wall = 0;
	    let lastWall = 0;
        let brickscore = 0;
        let brick1 = false;
        let brick2 = false;
        let brick3 = false;
        let brick4 = false;

        let brick = Brick.new(60,10);

        return this;
    }

    method void dispose() {
        do bat.dispose();
		do ball.dispose();
        do Memory.deAlloc(this);
        return;
    }

    function void newInstance() {
        let instance = PongGame.new();
        return;
    }
 
    function PongGame getInstance() {
        return instance;
    }

    method void run() {
        var char key;
        var int counter, brickstat;

        let counter = 0;

        while (~exit) {
            // waits for a key to be pressed.
            while ((key = 0) & (~exit)) {
                let key = Keyboard.keyPressed();
                do bat.move();
		        do moveBall();
                do brickGen(100);

                if (ball.getY() < 10) {
                    // let brickstat = brick.get(0);
                    if (brick1) {
                        if (ball.getRight() < 60 &  ball.getLeft() > 0) {
                            let brickscore = brickscore + 1;
                            do Output.moveCursor(22,33);
                            do Output.printInt(brickscore);
                            do brick.setZero(0);
                            let brick1 = false;
                            do Screen.setColor(false);
                            do Screen.drawRectangle(0, 0, 60, 10);
                        }
                    }
    
                    // let brickstat = brick.get(1);
                    if (brick2) {
                        if (ball.getRight() < 180 &  ball.getLeft() > 120) {
                            let brickscore = brickscore + 1;
                            do Output.moveCursor(22,33);
                            do Output.printInt(brickscore);
                            do brick.setZero(1);
                            let brick2 = false;
                            do Screen.setColor(false);
                            do Screen.drawRectangle(120, 0, 120+60, 10);
                        }
                    }
    
                    // let brickstat = brick.get(2);
                    if (brick3) {
                        if (ball.getRight() < 391 &  ball.getLeft() > 331) {
                            let brickscore = brickscore + 1;
                            do Output.moveCursor(22,33);
                            do Output.printInt(brickscore);
                            do brick.setZero(2);
                            let brick3 = false;
                            do Screen.setColor(false);
                            do Screen.drawRectangle(331, 0, 331+60, 10);
                        }
                    }
    
                    // let brickstat = brick.get(3);
                    if (brick4) {
                        if (ball.getRight() < 511 &  ball.getLeft() > 451) {
                            let brickscore = brickscore + 1;
                            do Output.moveCursor(22,33);
                            do Output.printInt(brickscore);
                            do brick.setZero(3);
                            let brick4 = false;
                            do Screen.setColor(false);
                            do Screen.drawRectangle(451, 0, 451+60, 10);
                        }
                    }
                }
    

                
                

                //add in brick draw
                let time = time + 1;
            }

            if (key = 130) {
	            do bat.setDirection(1);
            }
	        else {
	            if (key = 132) {
 	                do bat.setDirection(2);
                }
		        else {
	                if (key = 140) {
                        let exit = true;
		            }
		        }
            }

            
            // Waits for the key to be released.
            while ((~(key = 0)) & (~exit)) {
                let key = Keyboard.keyPressed();
                do bat.move();
                do moveBall();
                do brickGen(100);

                if (ball.getY() < 10) {
                    // let brickstat = brick.get(0);
                    if (brick1) {
                        if (ball.getRight() < 60 &  ball.getLeft() > 0) {
                            let brickscore = brickscore + 1;
                            do Output.moveCursor(22,33);
                            do Output.printInt(brickscore);
                            do brick.setZero(0);
                            let brick1 = false;
                            do Screen.setColor(false);
                            do Screen.drawRectangle(0, 0, 60, 10);
                        }
                    }
    
                    // let brickstat = brick.get(1);
                    if (brick2) {
                        if (ball.getRight() < 180 &  ball.getLeft() > 120) {
                            let brickscore = brickscore + 1;
                            do Output.moveCursor(22,33);
                            do Output.printInt(brickscore);
                            do brick.setZero(1);
                            let brick2 = false;
                            do Screen.setColor(false);
                            do Screen.drawRectangle(120, 0, 120+60, 10);
                        }
                    }
    
                    // let brickstat = brick.get(2);
                    if (brick3) {
                        if (ball.getRight() < 391 &  ball.getLeft() > 331) {
                            let brickscore = brickscore + 1;
                            do Output.moveCursor(22,33);
                            do Output.printInt(brickscore);
                            do brick.setZero(2);
                            let brick3 = false;
                            do Screen.setColor(false);
                            do Screen.drawRectangle(331, 0, 331+60, 10);
                        }
                    }
    
                    // let brickstat = brick.get(3);
                    if (brick4) {
                        if (ball.getRight() < 511 &  ball.getLeft() > 451) {
                            let brickscore = brickscore + 1;
                            do Output.moveCursor(22,33);
                            do Output.printInt(brickscore);
                            do brick.setZero(3);
                            let brick4 = false;
                            do Screen.setColor(false);
                            do Screen.drawRectangle(451, 0, 451+60, 10);
                        }
                    }
                }
    

                
                let time = time + 1;
            }

            
            let time = time + 1;
        }

	    if (exit) {
    	    do Output.moveCursor(10,27);
	        do Output.printString("Game Over");
	    }
            
        return;
    }

    method void moveBall() {
	    var int bouncingDirection, batLeft, batRight, ballLeft, ballRight;

	    let wall = ball.move();

        if ((wall > 0) & (~(wall = lastWall))) {
            let lastWall = wall;
            let bouncingDirection = 0;
            let batLeft = bat.getLeft();
            let batRight = bat.getRight();
            let ballLeft = ball.getLeft();
            let ballRight = ball.getRight();
        
            if (wall = 4) {
                let exit = (batLeft > ballRight) | (batRight < ballLeft);
                if (~exit) {
                    if (ballRight < (batLeft + 10)) {
                        let bouncingDirection = -1;
                    }
                    else {
                        if (ballLeft > (batRight - 10)) {
                        let bouncingDirection = 1;
                        }
                    }

                    let batWidth = batWidth - 2;
                    do bat.setWidth(batWidth);			
                    let score = score + 1;
                    do Output.moveCursor(22,14);
                    do Output.printInt(score);
                }
            }

            do ball.bounce(bouncingDirection);
        }

	    return;
    }


    method void brickGen(int frequency) {
        //four possible brick spots --> 0, 120, 331, 451
        //length is 60

        var int brickchoice;
        var int rand;
        var int i;
        
        let i = 0;


        if (time = frequency | time > frequency) {

            let time = 0;
            let rand = Random.randInt(0,4);

            //tester
            // do Screen.clearScreen();
            // do Output.moveCursor(0,0);
            // do Output.printInt(rand);

            if (brick.get(rand) = 0) {
                let brickchoice = rand;
                do brick.setOne(brickchoice);
                do brickDraw(brickchoice);

                if (brickchoice = 0) {
                    let brick1 = true;
                }
                if (brickchoice = 1) {
                    let brick2 = true;
                }
                if (brickchoice = 2) {
                    let brick3 = true;
                }
                if (brickchoice = 3) {
                    let brick4 = true;
                }
            }

            //another tester
            // do Screen.clearScreen();
            // while (i<4) {
            //     do Output.moveCursor(0,0);
            //     do Output.printInt(brick.get(i));
            // }

            
            
        }

        



        return;
    }

    method void brickDraw(int brickchoice) {
        //four possible brick spots --> 0, 120, 331, 451
        //length is 60

        if (brickchoice = 0) {
            do Screen.drawRectangle(0, 0, 60, 10);
        }
        else {
            if (brickchoice = 1) {
                do Screen.drawRectangle(120, 0, 120+60, 10);
            }
            else {
                if (brickchoice = 2) {
                    do Screen.drawRectangle(331, 0, 331+60, 10);
                }
                else {
                    if (brickchoice = 3) {
                        do Screen.drawRectangle(451, 0, 451+60, 10);
                    }
                }
            }
        }

        return;


    }


    method void brickClear(int brickchoice) {
        //four possible brick spots --> 0, 120, 331, 451
        //length is 60

        do Screen.setColor(false);

        if (brickchoice = 0) {
            do Screen.drawRectangle(0, 0, 60, 10);
        }
        else {
            if (brickchoice = 1) {
                do Screen.drawRectangle(120, 0, 120+60, 10);
            }
            else {
                if (brickchoice = 2) {
                    do Screen.drawRectangle(331, 0, 331+60, 10);
                }
                else {
                    if (brickchoice = 3) {
                        do Screen.drawRectangle(451, 0, 451+60, 10);
                    }
                }
            }
        }

        return;

    

    }


    method void brickHit() {
        var int ball_center;


        let ball_center = (ball.getLeft() + ball.getRight())/2;

        if (ball_center < 60 & ball_center > 0 & ball.getY() < 10 & ball.getY() > 0) {
            do brickClear(0);
        }

        if (ball_center < 180 & ball_center > 120 & ball.getY() < 10 & ball.getY() > 0) {
            do brickClear(1);
        }

        if (ball_center < 391 & ball_center > 331 & ball.getY() < 10 & ball.getY() > 0) {
            do brickClear(2);
        }

        if (ball_center < 511 & ball_center > 451 & ball.getY() < 10 & ball.getY() > 0) {
            do brickClear(3);
        }

        return;
    }


}
